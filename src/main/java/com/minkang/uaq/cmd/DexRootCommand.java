
package com.minkang.uaq.cmd;
import com.minkang.uaq.UAQPlugin; import com.minkang.uaq.gui.MenuListener; import com.minkang.uaq.gui.DexRewardConfigMenu; import com.minkang.uaq.gui.DexRewardClaimMenu; import com.minkang.uaq.util.Text;
import org.bukkit.Bukkit; import org.bukkit.command.*; import org.bukkit.entity.Player; import java.util.*;
public class DexRootCommand implements CommandExecutor {
    @Override public boolean onCommand(CommandSender s, Command c, String l, String[] a){
        if(a.length==0 || a[0].equalsIgnoreCase("열기")){ if(!(s instanceof Player)){ s.sendMessage("플레이어만 사용 가능합니다."); return true; } Player p=(Player)s; java.util.List<Integer> list=UAQPlugin.get().dex().newlyAchieved(p.getUniqueId(), UAQPlugin.get().dex().getPercent(p.getUniqueId())); if(list.isEmpty()){ p.sendMessage(Text.color("&7받을 수 있는 도감 보상이 없습니다.")); return true; } MenuListener.open(p, new DexRewardClaimMenu(p, list)); return true; }
        if(a[0].equalsIgnoreCase("도움말")){ s.sendMessage(Text.color("&e/도감 열기 &7- 수령 가능한 도감 보상 GUI")); s.sendMessage(Text.color("&e/도감 갱신 <퍼센트> &7- (브리지) 내 도감 진행 갱신")); if(s.hasPermission("uaq.admin")){ s.sendMessage(Text.color("&e/도감 설정 &7- 보상 설정 GUI(관리자)")); s.sendMessage(Text.color("&e/도감 보상설정추가 <퍼센트> <세트ID>")); s.sendMessage(Text.color("&e/도감 보상설정삭제 <퍼센트>")); s.sendMessage(Text.color("&e/도감 진행설정 <플레이어> <퍼센트>")); } return true; }
        if(a[0].equalsIgnoreCase("갱신")){ if(!(s instanceof Player)){ s.sendMessage("플레이어만 사용 가능합니다."); return true; } if(a.length<2){ s.sendMessage(Text.color("&c사용법: /도감 갱신 <퍼센트>")); return true; } int per=0; try{ per=Integer.parseInt(a[1]); }catch(Exception e){ s.sendMessage(Text.color("&c숫자를 입력하세요.")); return true; } Player p=(Player)s; UAQPlugin.get().dex().setPercent(p.getUniqueId(), per); java.util.List<Integer> newly = UAQPlugin.get().dex().newlyAchieved(p.getUniqueId(), per); if(newly.isEmpty()){ p.sendMessage(Text.color("&7새로 달성한 임계치가 없습니다.")); } else { MenuListener.open(p, new DexRewardClaimMenu(p, newly)); } return true; }
        if(a[0].equalsIgnoreCase("설정")){ if(!(s instanceof Player)){ s.sendMessage("플레이어만 사용 가능합니다."); return true; } if(!s.hasPermission("uaq.admin")){ s.sendMessage(Text.color("&c권한이 필요합니다.")); return true; } MenuListener.open((Player)s, new DexRewardConfigMenu((Player)s)); return true; }
        if(a[0].equalsIgnoreCase("보상설정추가")){ if(!s.hasPermission("uaq.admin")){ s.sendMessage(Text.color("&c권한이 필요합니다.")); return true; } if(a.length<3){ s.sendMessage(Text.color("&c사용법: /도감 보상설정추가 <퍼센트> <세트ID>")); return true; } int per=Integer.parseInt(a[1]); String setId=a[2]; UAQPlugin.get().getConfig().set("dex.thresholds."+per, setId); UAQPlugin.get().saveConfig(); s.sendMessage(Text.color("&a도감 보상 등록: "+per+"% -> "+setId)); return true; }
        if(a[0].equalsIgnoreCase("보상설정삭제")){ if(!s.hasPermission("uaq.admin")){ s.sendMessage(Text.color("&c권한이 필요합니다.")); return true; } if(a.length<2){ s.sendMessage(Text.color("&c사용법: /도감 보상설정삭제 <퍼센트>")); return true; } int per=Integer.parseInt(a[1]); UAQPlugin.get().getConfig().set("dex.thresholds."+per, null); UAQPlugin.get().saveConfig(); s.sendMessage(Text.color("&a도감 보상 삭제: "+per+"%")); return true; }
        if(a[0].equalsIgnoreCase("진행설정")){ if(!s.hasPermission("uaq.admin")){ s.sendMessage(Text.color("&c권한이 필요합니다.")); return true; } if(a.length<3){ s.sendMessage(Text.color("&c사용법: /도감 진행설정 <플레이어> <퍼센트>")); return true; } Player target=Bukkit.getPlayerExact(a[1]); if(target==null){ s.sendMessage(Text.color("&c플레이어가 접속 중이 아닙니다.")); return true; } int per=Integer.parseInt(a[2]); UAQPlugin.get().dex().setPercent(target.getUniqueId(), per); s.sendMessage(Text.color("&a설정 완료: "+target.getName()+" -> "+per+"%")); return true; }
        s.sendMessage(Text.color("&c알 수 없는 하위명령입니다. /도감 도움말")); return true;
    }
}
